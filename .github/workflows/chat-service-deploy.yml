name: Docker Image CI2

on:
  push:
    paths:
      - 'chat-service/**'

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          cd chat-service
          ./gradlew clean build
        shell: bash

      - name: Generate JaCoCo report
        run: |
          cd chat-service
          ./gradlew jacocoTestReport
        shell: bash

      - name: Verify JaCoCo report generation
        run: |
          cd chat-service
          echo "Listing report directory"
          ls -la build/reports/jacoco/test
          echo "Listing HTML report directory"
          ls -la build/reports/jacoco/test/html
        shell: bash

      - name: Upload JaCoCo XML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: chat-service/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: chat-service/build/reports/jacoco/test/html

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: chat-service/build/reports/jacoco/test
          fail_ci_if_error: true
        continue-on-error: true

      - name: Docker build & push to prod
        run: |
          cd chat-service 
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-test-prod .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test-prod

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-testchat-prod
            sudo docker run -d -p 8761:8761 ${{ secrets.DOCKER_USERNAME }}/docker-testchat-prod
            sudo docker image prune -f
